{
    "swagger": "2.0",
    "info": {
        "title": "Laravel Generator APIs",
        "version": "1.0.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/admissions": {
            "get": {
                "tags": [
                    "Admission"
                ],
                "summary": "Get a listing of the Admissions.",
                "description": "Get all Admissions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Admission"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admission"
                ],
                "summary": "Store a newly created Admission in storage",
                "description": "Store Admission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "PLEASE NOTE : REMOVE ARRAY BRACKETS FROM ARRAY OBJECTS '[' ",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Admission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Admission"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/admissions/{id}": {
            "get": {
                "tags": [
                    "Admission"
                ],
                "summary": "Display the specified Admission",
                "description": "Get Admission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Admission",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Admission"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admission"
                ],
                "summary": "Update the specified Admission in storage",
                "description": "Update Admission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Admission",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Admission that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Admission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Admission"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admission"
                ],
                "summary": "Remove the specified Admission from storage",
                "description": "Delete Admission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Admission",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/admissionStatuses": {
            "get": {
                "tags": [
                    "AdmissionStatus"
                ],
                "summary": "Get a listing of the AdmissionStatuses.",
                "description": "Get all AdmissionStatuses",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AdmissionStatus"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AdmissionStatus"
                ],
                "summary": "Store a newly created AdmissionStatus in storage",
                "description": "Store AdmissionStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "AdmissionStatus that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AdmissionStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/AdmissionStatus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/admissionStatuses/{id}": {
            "get": {
                "tags": [
                    "AdmissionStatus"
                ],
                "summary": "Display the specified AdmissionStatus",
                "description": "Get AdmissionStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AdmissionStatus",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/AdmissionStatus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AdmissionStatus"
                ],
                "summary": "Update the specified AdmissionStatus in storage",
                "description": "Update AdmissionStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AdmissionStatus",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "AdmissionStatus that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AdmissionStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/AdmissionStatus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AdmissionStatus"
                ],
                "summary": "Remove the specified AdmissionStatus from storage",
                "description": "Delete AdmissionStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AdmissionStatus",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/applyYears": {
            "get": {
                "tags": [
                    "ApplyYear"
                ],
                "summary": "Get a listing of the ApplyYears.",
                "description": "Get all ApplyYears",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplyYear"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ApplyYear"
                ],
                "summary": "Store a newly created ApplyYear in storage",
                "description": "Store ApplyYear",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "ApplyYear that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ApplyYear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ApplyYear"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/applyYears/{id}": {
            "get": {
                "tags": [
                    "ApplyYear"
                ],
                "summary": "Display the specified ApplyYear",
                "description": "Get ApplyYear",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ApplyYear",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ApplyYear"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ApplyYear"
                ],
                "summary": "Update the specified ApplyYear in storage",
                "description": "Update ApplyYear",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ApplyYear",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "ApplyYear that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ApplyYear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ApplyYear"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ApplyYear"
                ],
                "summary": "Remove the specified ApplyYear from storage",
                "description": "Delete ApplyYear",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ApplyYear",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/buses": {
            "get": {
                "tags": [
                    "Bus"
                ],
                "summary": "Get a listing of the Buses.",
                "description": "Get all Buses",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Bus"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bus"
                ],
                "summary": "Store a newly created Bus in storage",
                "description": "Store Bus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Bus that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Bus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Bus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/buses/{id}": {
            "get": {
                "tags": [
                    "Bus"
                ],
                "summary": "Display the specified Bus",
                "description": "Get Bus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Bus",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Bus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Bus"
                ],
                "summary": "Update the specified Bus in storage",
                "description": "Update Bus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Bus",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Bus that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Bus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Bus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bus"
                ],
                "summary": "Remove the specified Bus from storage",
                "description": "Delete Bus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Bus",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/classes": {
            "get": {
                "tags": [
                    "Class"
                ],
                "summary": "Get a listing of the Classes.",
                "description": "Get all Classes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Class"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Class"
                ],
                "summary": "Store a newly created Class in storage",
                "description": "Store Class",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Class that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Class"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Class"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/classes/{id}": {
            "get": {
                "tags": [
                    "Class"
                ],
                "summary": "Display the specified Class",
                "description": "Get Class",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Class",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Class"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Class"
                ],
                "summary": "Update the specified Class in storage",
                "description": "Update Class",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Class",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Class that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Class"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Class"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Class"
                ],
                "summary": "Remove the specified Class from storage",
                "description": "Delete Class",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Class",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/divisions": {
            "get": {
                "tags": [
                    "Division"
                ],
                "summary": "Get a listing of the Divisions.",
                "description": "Get all Divisions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Division"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Division"
                ],
                "summary": "Store a newly created Division in storage",
                "description": "Store Division",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Division that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Division"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/divisions/{id}": {
            "get": {
                "tags": [
                    "Division"
                ],
                "summary": "Display the specified Division",
                "description": "Get Division",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Division",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Division"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Division"
                ],
                "summary": "Update the specified Division in storage",
                "description": "Update Division",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Division",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Division that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Division"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Division"
                ],
                "summary": "Remove the specified Division from storage",
                "description": "Delete Division",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Division",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/genders": {
            "get": {
                "tags": [
                    "Gender"
                ],
                "summary": "Get a listing of the Genders.",
                "description": "Get all Genders",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Gender"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Gender"
                ],
                "summary": "Store a newly created Gender in storage",
                "description": "Store Gender",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Gender that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Gender"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Gender"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/genders/{id}": {
            "get": {
                "tags": [
                    "Gender"
                ],
                "summary": "Display the specified Gender",
                "description": "Get Gender",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Gender",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Gender"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Gender"
                ],
                "summary": "Update the specified Gender in storage",
                "description": "Update Gender",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Gender",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Gender that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Gender"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Gender"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Gender"
                ],
                "summary": "Remove the specified Gender from storage",
                "description": "Delete Gender",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Gender",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/grades": {
            "get": {
                "tags": [
                    "Grade"
                ],
                "summary": "Get a listing of the Grades.",
                "description": "Get all Grades",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Grade"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grade"
                ],
                "summary": "Store a newly created Grade in storage",
                "description": "Store Grade",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Grade that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Grade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Grade"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/grades/{id}": {
            "get": {
                "tags": [
                    "Grade"
                ],
                "summary": "Display the specified Grade",
                "description": "Get Grade",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Grade",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Grade"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grade"
                ],
                "summary": "Update the specified Grade in storage",
                "description": "Update Grade",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Grade",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Grade that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Grade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Grade"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Grade"
                ],
                "summary": "Remove the specified Grade from storage",
                "description": "Delete Grade",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Grade",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get a listing of the Languages.",
                "description": "Get all Languages",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Language"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Language"
                ],
                "summary": "Store a newly created Language in storage",
                "description": "Store Language",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Language that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Language"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/languages/{id}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Display the specified Language",
                "description": "Get Language",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Language",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Language"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Language"
                ],
                "summary": "Update the specified Language in storage",
                "description": "Update Language",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Language",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Language that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Language"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Language"
                ],
                "summary": "Remove the specified Language from storage",
                "description": "Delete Language",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Language",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/maritalStatuses": {
            "get": {
                "tags": [
                    "MaritalStatus"
                ],
                "summary": "Get a listing of the MaritalStatuses.",
                "description": "Get all MaritalStatuses",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MaritalStatus"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MaritalStatus"
                ],
                "summary": "Store a newly created MaritalStatus in storage",
                "description": "Store MaritalStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "MaritalStatus that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MaritalStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MaritalStatus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/maritalStatuses/{id}": {
            "get": {
                "tags": [
                    "MaritalStatus"
                ],
                "summary": "Display the specified MaritalStatus",
                "description": "Get MaritalStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MaritalStatus",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MaritalStatus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MaritalStatus"
                ],
                "summary": "Update the specified MaritalStatus in storage",
                "description": "Update MaritalStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MaritalStatus",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "MaritalStatus that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MaritalStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MaritalStatus"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MaritalStatus"
                ],
                "summary": "Remove the specified MaritalStatus from storage",
                "description": "Delete MaritalStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MaritalStatus",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/nationalities": {
            "get": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Get a listing of the Nationalities.",
                "description": "Get all Nationalities",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Nationality"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Store a newly created Nationality in storage",
                "description": "Store Nationality",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Nationality that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Nationality"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Nationality"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/nationalities/{id}": {
            "get": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Display the specified Nationality",
                "description": "Get Nationality",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Nationality",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Nationality"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Update the specified Nationality in storage",
                "description": "Update Nationality",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Nationality",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Nationality that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Nationality"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Nationality"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Remove the specified Nationality from storage",
                "description": "Delete Nationality",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Nationality",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/parents": {
            "get": {
                "tags": [
                    "Parent"
                ],
                "summary": "Get a listing of the Parents.",
                "description": "Get all Parents",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Parent"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Parent"
                ],
                "summary": "Store a newly created Parent in storage",
                "description": "Store Parent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Parent that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Parent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Parent"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/parents/{id}": {
            "get": {
                "tags": [
                    "Parent"
                ],
                "summary": "Display the specified Parent",
                "description": "Get Parent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Parent",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Parent"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Parent"
                ],
                "summary": "Update the specified Parent in storage",
                "description": "Update Parent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Parent",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Parent that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Parent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Parent"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Parent"
                ],
                "summary": "Remove the specified Parent from storage",
                "description": "Delete Parent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Parent",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/religions": {
            "get": {
                "tags": [
                    "Religion"
                ],
                "summary": "Get a listing of the Religions.",
                "description": "Get all Religions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Religion"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Religion"
                ],
                "summary": "Store a newly created Religion in storage",
                "description": "Store Religion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Religion that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Religion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Religion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/religions/{id}": {
            "get": {
                "tags": [
                    "Religion"
                ],
                "summary": "Display the specified Religion",
                "description": "Get Religion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Religion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Religion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Religion"
                ],
                "summary": "Update the specified Religion in storage",
                "description": "Update Religion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Religion",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Religion that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Religion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Religion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Religion"
                ],
                "summary": "Remove the specified Religion from storage",
                "description": "Delete Religion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Religion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get a listing of the Students.",
                "description": "Get all Students",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Student"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Student"
                ],
                "summary": "Store a newly created Student in storage",
                "description": "Store Student",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Student that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Student"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/students/{id}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Display the specified Student",
                "description": "Get Student",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Student",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Student"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Student"
                ],
                "summary": "Update the specified Student in storage",
                "description": "Update Student",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Student",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Student that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Student"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Student"
                ],
                "summary": "Remove the specified Student from storage",
                "description": "Delete Student",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Student",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/userTypes": {
            "get": {
                "tags": [
                    "UserType"
                ],
                "summary": "Get a listing of the UserTypes.",
                "description": "Get all UserTypes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserType"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserType"
                ],
                "summary": "Store a newly created UserType in storage",
                "description": "Store UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "UserType that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/userTypes/{id}": {
            "get": {
                "tags": [
                    "UserType"
                ],
                "summary": "Display the specified UserType",
                "description": "Get UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UserType"
                ],
                "summary": "Update the specified UserType in storage",
                "description": "Update UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserType",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "UserType that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserType"
                ],
                "summary": "Remove the specified UserType from storage",
                "description": "Delete UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Admission": {
            "properties": {
                "student": {
                    "description": "student",
                    "items": {
                        "properties": {
                            "first_name_en": {
                                "type": "string"
                            },
                            "middle_name_en": {
                                "type": "string"
                            },
                            "last_name_en": {
                                "type": "string"
                            },
                            "first_name_ar": {
                                "type": "string"
                            },
                            "middle_name_ar": {
                                "type": "string"
                            },
                            "last_name_ar": {
                                "type": "string"
                            },
                            "division_id": {
                                "type": "string"
                            },
                            "grade_id": {
                                "type": "string"
                            },
                            "class_id": {
                                "type": "string"
                            },
                            "passport_no": {
                                "type": "string"
                            },
                            "birth_date": {
                                "type": "string"
                            },
                            "birth_place": {
                                "type": "string"
                            },
                            "october_age_date": {
                                "type": "string"
                            },
                            "academic_year_applying_id": {
                                "type": "string"
                            },
                            "nationality_id": {
                                "type": "string"
                            },
                            "gender_id": {
                                "type": "string"
                            },
                            "bus_id": {
                                "type": "string"
                            },
                            "religion_id": {
                                "type": "string"
                            },
                            "previous_school_nursery": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "lang_id": {
                                "type": "string"
                            },
                            "user_id": {
                                "type": "string"
                            },
                            "birth_certificate": {
                                "type": "string"
                            },
                            "academic_house": {
                                "type": "string"
                            },
                            "report_cards": {
                                "type": "string"
                            },
                            "referance_letter": {
                                "type": "string"
                            },
                            "referance_name": {
                                "type": "string"
                            },
                            "referance_email": {
                                "type": "string"
                            },
                            "referance_phone": {
                                "type": "string"
                            },
                            "enroll_date": {
                                "type": "string"
                            },
                            "custody": {
                                "type": "string"
                            },
                            "foreigner": {
                                "type": "string"
                            },
                            "egy_returning": {
                                "type": "string"
                            },
                            "transfer_from_cairo": {
                                "type": "string"
                            },
                            "staff_child": {
                                "type": "string"
                            },
                            "staff_no": {
                                "type": "string"
                            },
                            "learn_support": {
                                "type": "string"
                            },
                            "learn_support_details": {
                                "type": "string"
                            },
                            "photo": {
                                "type": "string"
                            },
                            "code": {
                                "type": "string"
                            },
                            "national_no": {
                                "type": "string"
                            },
                            "submit_date": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "parent1": {
                    "description": "parent1",
                    "items": {
                        "properties": {
                            "first_name_en": {
                                "type": "string"
                            },
                            "middle_name_en": {
                                "type": "string"
                            },
                            "last_name_en": {
                                "type": "string"
                            },
                            "first_name_ar": {
                                "type": "string"
                            },
                            "middle_name_ar": {
                                "type": "string"
                            },
                            "last_name_ar": {
                                "type": "string"
                            },
                            "marital_status_id": {
                                "type": "string"
                            },
                            "university": {
                                "type": "string"
                            },
                            "occupation": {
                                "type": "string"
                            },
                            "employer": {
                                "type": "string"
                            },
                            "type_of_business": {
                                "type": "string"
                            },
                            "business_address": {
                                "type": "string"
                            },
                            "business_mobile": {
                                "type": "string"
                            },
                            "business_email": {
                                "type": "string"
                            },
                            "alumni": {
                                "type": "string"
                            },
                            "class_off": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "school": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "parent2": {
                    "description": "parent2",
                    "items": {
                        "properties": {
                            "first_name_en": {
                                "type": "string"
                            },
                            "middle_name_en": {
                                "type": "string"
                            },
                            "last_name_en": {
                                "type": "string"
                            },
                            "first_name_ar": {
                                "type": "string"
                            },
                            "middle_name_ar": {
                                "type": "string"
                            },
                            "last_name_ar": {
                                "type": "string"
                            },
                            "marital_status_id": {
                                "type": "string"
                            },
                            "university": {
                                "type": "string"
                            },
                            "occupation": {
                                "type": "string"
                            },
                            "employer": {
                                "type": "string"
                            },
                            "type_of_business": {
                                "type": "string"
                            },
                            "business_address": {
                                "type": "string"
                            },
                            "business_mobile": {
                                "type": "string"
                            },
                            "business_email": {
                                "type": "string"
                            },
                            "alumni": {
                                "type": "string"
                            },
                            "class_off": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "school": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "admission_status_id": {
                    "description": "admission_status_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AdmissionStatus": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ApplyYear": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Bus": {
            "required": [
                "bus_no",
                "brand",
                "seat_count",
                "license_no",
                "license_expire"
            ],
            "properties": {
                "bus_no": {
                    "description": "bus_no",
                    "type": "string"
                },
                "brand": {
                    "description": "brand",
                    "type": "string"
                },
                "seat_count": {
                    "description": "seat_count",
                    "type": "integer",
                    "format": "int32"
                },
                "license_no": {
                    "description": "license_no",
                    "type": "string"
                },
                "license_expire": {
                    "description": "license_expire",
                    "type": "string",
                    "format": "date"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Division": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Gender": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Grade": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Language": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "MaritalStatus": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Nationality": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Religion": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Class": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Parent": {
            "required": [
                "first_name_en",
                "middle_name_en",
                "last_name_en",
                "first_name_ar",
                "middle_name_ar",
                "last_name_ar",
                "marital_status_id",
                "university",
                "occupation",
                "employer",
                "type_of_business",
                "business_address",
                "business_mobile",
                "business_email",
                "alumni",
                "class_off",
                "type",
                "school"
            ],
            "properties": {
                "first_name_en": {
                    "description": "first_name_en",
                    "type": "string"
                },
                "middle_name_en": {
                    "description": "middle_name_en",
                    "type": "string"
                },
                "last_name_en": {
                    "description": "last_name_en",
                    "type": "string"
                },
                "first_name_ar": {
                    "description": "first_name_ar",
                    "type": "string"
                },
                "middle_name_ar": {
                    "description": "middle_name_ar",
                    "type": "string"
                },
                "last_name_ar": {
                    "description": "last_name_ar",
                    "type": "string"
                },
                "marital_status_id": {
                    "description": "marital_status_id",
                    "type": "integer",
                    "format": "int32"
                },
                "university": {
                    "description": "university",
                    "type": "string"
                },
                "occupation": {
                    "description": "occupation",
                    "type": "string"
                },
                "employer": {
                    "description": "employer",
                    "type": "string"
                },
                "type_of_business": {
                    "description": "type_of_business",
                    "type": "string"
                },
                "business_address": {
                    "description": "business_address",
                    "type": "string"
                },
                "business_mobile": {
                    "description": "business_mobile",
                    "type": "string"
                },
                "business_email": {
                    "description": "business_email",
                    "type": "string"
                },
                "alumni": {
                    "description": "alumni",
                    "type": "boolean"
                },
                "class_off": {
                    "description": "class_off",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "school": {
                    "description": "school",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Student": {
            "required": [
                "first_name_en",
                "middle_name_en",
                "last_name_en",
                "first_name_ar",
                "middle_name_ar",
                "last_name_ar",
                "division_id",
                "grade_id",
                "class_id",
                "passport_no",
                "birth_date",
                "birth_place",
                "october_age_date",
                "academic_year_applying_id",
                "nationality_id",
                "gender_id",
                "bus_id",
                "religion_id",
                "previous_school_nursery",
                "address",
                "city",
                "email",
                "mobile",
                "submit_date",
                "photo",
                "code",
                "lang_id",
                "birth_certificate",
                "academic_house",
                "report_cards",
                "referance_letter",
                "referance_name",
                "referance_email",
                "referance_phone",
                "enroll_date",
                "custody",
                "foreigner",
                "egy_returning",
                "transfer_from_cairo",
                "staff_child",
                "staff_no",
                "learn_support",
                "learn_support_details"
            ],
            "properties": {
                "first_name_en": {
                    "description": "first_name_en",
                    "type": "string"
                },
                "middle_name_en": {
                    "description": "middle_name_en",
                    "type": "string"
                },
                "last_name_en": {
                    "description": "last_name_en",
                    "type": "string"
                },
                "first_name_ar": {
                    "description": "first_name_ar",
                    "type": "string"
                },
                "middle_name_ar": {
                    "description": "middle_name_ar",
                    "type": "string"
                },
                "last_name_ar": {
                    "description": "last_name_ar",
                    "type": "string"
                },
                "division_id": {
                    "description": "division_id",
                    "type": "integer",
                    "format": "int32"
                },
                "grade_id": {
                    "description": "grade_id",
                    "type": "integer",
                    "format": "int32"
                },
                "class_id": {
                    "description": "class_id",
                    "type": "integer",
                    "format": "int32"
                },
                "national_no": {
                    "description": "national_no",
                    "type": "string"
                },
                "passport_no": {
                    "description": "passport_no",
                    "type": "string"
                },
                "birth_date": {
                    "description": "birth_date",
                    "type": "string",
                    "format": "date"
                },
                "birth_place": {
                    "description": "birth_place",
                    "type": "string"
                },
                "october_age_date": {
                    "description": "october_age_date",
                    "type": "string",
                    "format": "date"
                },
                "academic_year_applying_id": {
                    "description": "academic_year_applying_id",
                    "type": "integer",
                    "format": "int32"
                },
                "nationality_id": {
                    "description": "nationality_id",
                    "type": "integer",
                    "format": "int32"
                },
                "gender_id": {
                    "description": "gender_id",
                    "type": "integer",
                    "format": "int32"
                },
                "bus_id": {
                    "description": "bus_id",
                    "type": "integer",
                    "format": "int32"
                },
                "religion_id": {
                    "description": "religion_id",
                    "type": "integer",
                    "format": "int32"
                },
                "previous_school_nursery": {
                    "description": "previous_school_nursery",
                    "type": "string"
                },
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "mobile": {
                    "description": "mobile",
                    "type": "string"
                },
                "submit_date": {
                    "description": "submit_date",
                    "type": "string",
                    "format": "date"
                },
                "photo": {
                    "description": "photo",
                    "type": "string"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "lang_id": {
                    "description": "lang_id",
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                },
                "birth_certificate": {
                    "description": "birth_certificate",
                    "type": "string"
                },
                "academic_house": {
                    "description": "academic_house",
                    "type": "string"
                },
                "report_cards": {
                    "description": "report_cards",
                    "type": "string"
                },
                "referance_letter": {
                    "description": "referance_letter",
                    "type": "string"
                },
                "referance_name": {
                    "description": "referance_name",
                    "type": "string"
                },
                "referance_email": {
                    "description": "referance_email",
                    "type": "string"
                },
                "referance_phone": {
                    "description": "referance_phone",
                    "type": "string"
                },
                "enroll_date": {
                    "description": "enroll_date",
                    "type": "string",
                    "format": "date"
                },
                "custody": {
                    "description": "custody",
                    "type": "string"
                },
                "foreigner": {
                    "description": "foreigner",
                    "type": "boolean"
                },
                "egy_returning": {
                    "description": "egy_returning",
                    "type": "boolean"
                },
                "transfer_from_cairo": {
                    "description": "transfer_from_cairo",
                    "type": "boolean"
                },
                "staff_child": {
                    "description": "staff_child",
                    "type": "boolean"
                },
                "staff_no": {
                    "description": "staff_no",
                    "type": "string"
                },
                "learn_support": {
                    "description": "learn_support",
                    "type": "boolean"
                },
                "learn_support_details": {
                    "description": "learn_support_details",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "UserType": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}